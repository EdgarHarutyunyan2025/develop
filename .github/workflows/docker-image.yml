name: Build & Push Docker Image

on:
  push:
    branches:
      - main  

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get latest Docker image version
        id: get_version
        run: |
          USER=${{ secrets.DOCKER_USERNAME }}
          REPO=jsonplaceholder

          # Получаем список тегов с Docker Hub (макс. 100)
          TAGS=$(curl -s "https://hub.docker.com/v2/repositories/$USER/$REPO/tags/?page_size=100" | jq -r '.results[].name' | grep '^v[0-9]\+' || echo "v0")

          LAST_TAG=$(echo "$TAGS" | sed 's/v//' | sort -nr | head -n1)
          NEXT_VERSION=$((LAST_TAG + 1))
          echo "next_version=v$NEXT_VERSION" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./jsonplaceholder
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/jsonplaceholder:${{ steps.get_version.outputs.next_version }}
            ${{ secrets.DOCKER_USERNAME }}/jsonplaceholder:latest






      - name: Clone devops-repo
        uses: actions/checkout@v4
        with:
          repository: EdgarHarutyunyan2025/devops
          token: ${{ secrets.TARGET_REPO_TOKEN }}
          path: helm-chart

      - name: Update image tag in values.yaml
        run: |
          ls -la
          ls -la helm-chart
          cd helm-chart
          sed -i "s/tag: .*/tag: ${{ env.NEW_TAG }}/" values.yaml

      - name: Commit and push changes
        run: |
          cd helm-chart
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add helm/jsonplaceholder/values.yaml
          git commit -m "chore: update image tag to ${{ env.NEW_TAG }}"
          git push
